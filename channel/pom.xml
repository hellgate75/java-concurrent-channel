<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.concurrent.utils.streams</groupId>
	<artifactId>channel</artifactId>
	<version>1.0.0</version>
	<name>Concurrent Channel Library</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<skip.unit.tests>false</skip.unit.tests>
		<skip.integration.tests>false</skip.integration.tests>

		<log4j-sfl4j.version>2.9.1</log4j-sfl4j.version>
	</properties>

	<dependencies>
		<!-- BOM -->
		<dependency>
			<groupId>com.concurrent.utils.streams</groupId>
			<artifactId>bom</artifactId>
			<type>pom</type>
			<version>${project.version}</version>
		</dependency>
		<!-- Common -->
		<dependency>
			<groupId>com.concurrent.utils.streams</groupId>
			<artifactId>common</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${log4j-sfl4j.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<defaultGoal>clean test cobertura:cobertura javadoc:jar source:jar package install</defaultGoal>
		<sourceDirectory>src/main/java</sourceDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.5.201505241946</version>
				<executions>
					<!-- Prepares the property pointing to the JaCoCo runtime agent which 
						is passed as VM argument when Maven the Surefire plugin is executed. -->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<skip>${skip.unit.tests}</skip>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
							<!-- Sets the name of the property containing the settings for JaCoCo 
								runtime agent. -->
							<propertyName>surefireArgLine</propertyName>
							<!-- Exclude of out scope artifacts in Preparation -->
							<excludes>
								<exclude>**/listeners/*.java</exclude>
							</excludes>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for unit tests is created 
						after unit tests have been run. -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<skip>${skip.unit.tests}</skip>
							<!-- Sets the path to the file which contains the execution data. -->
							<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
							<!-- Exclude of out scope artifacts in Report -->
							<excludes>
								<exclude>**/listeners/*.java</exclude>
							</excludes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<skip>${skip.unit.tests}</skip>
					<instrumentation>
							<!-- Exclude of out scope artifacts in Cobertura Report -->
						<excludes>
							<exclude>**/listeners/*.class</exclude>
						</excludes>
							<!-- Ignores of out scope components, sub-components and methods -->
						<ignores>
							<ignore>com.java.concurrent.utils.streams.channel.Channel.finalize</ignore>
							<ignore>com.java.concurrent.utils.streams.channel.Channel.ChannelThread</ignore>
							<ignore>com.java.concurrent.utils.streams.channel.Channel.ChannelThread.*</ignore>
						</ignores>
					</instrumentation>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>cobertura</goal>
						</goals>
						<phase>test</phase>
						<configuration>
							<outputDirectory>${project.reporting.outputDirectory}/cobertura</outputDirectory>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<!-- Prevent some java version to fail because of unreachable java tools.jar library archive  -->
					<dependency>
						<groupId>com.sun</groupId>
						<artifactId>tools</artifactId>
						<version>1.8.0</version>
						<scope>system</scope>
						<systemPath>${java.home}/../lib/tools.jar</systemPath>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.20</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit47</artifactId>
						<version>2.20</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<configuration>
							<!-- Sets the VM argument line used when unit tests are run. -->
							<argLine>${surefireArgLine}</argLine>
							<!-- Skips unit tests if the value of skip.unit.tests property is 
								true -->
							<skipTests>${skip.unit.tests}</skipTests>
							<!-- Excludes integration tests when unit tests are run. -->
							<includes>
								<include>**/*UnitTest.java</include>
							</includes>
							<excludes>
								<exclude>**/*IntegrationTest.java</exclude>
								<exclude>**/*PerformanceTest.java</exclude>
							</excludes>
						</configuration>
						<goals>
							<goal>test</goal>
						</goals>
						<phase>test</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.15</version>
				<executions>
					<!-- Ensures that both integration-test and verify goals of the Failsafe 
						Maven plugin are executed. -->
					<execution>
						<id>integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<!-- Sets the VM argument line used when integration tests are run. -->
							<argLine>${failsafeArgLine}</argLine>
							<!-- Skips integration tests if the value of skip.integration.tests 
								property is true -->
							<skipTests>${skip.integration.tests}</skipTests>
							<includes>
								<include>**/*IntegrationTest.java</include>
								<include>**/*PerformanceTest.java</include>
							</includes>
							<excludes>
								<exclude>**/*UnitTest.java</exclude>
							</excludes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.0.0-M1</version>
				<executions>
					<execution>
						<configuration>
							<doclint>none</doclint>
							<doctitle>${project.name}</doctitle>
							<includeDependencySources>true</includeDependencySources>
							<dependencySourceExcludes>
								<!-- exclude ONLY not needed packages artifacts -->
								<dependencySourceExclude>org.slf4j:*</dependencySourceExclude>
								<dependencySourceExclude>log4j:*</dependencySourceExclude>
								<dependencySourceExclude>com.sun:*</dependencySourceExclude>
							</dependencySourceExcludes>
						</configuration>
						<goals>
							<goal>javadoc</goal>
							<goal>jar</goal>
						</goals>
						<phase>package</phase>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>